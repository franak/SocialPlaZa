// ++++++++++++++++++++++++++++++++++++++++++++++++++++++ \\// menu.js, Objeto de aperturas de menus dinamicamente \\// ++++++++++++++++++++++++++++++++++++++++++++++++++++++ \\var menuObj;   menuObj = function () {	//Funcion Abrir Menu Sencillo parametros[array de elementos, id del contenido, objeto del componente "$comp"];	this.abrirMenuSencillo = function(aElementos,idMenu,$comp){				// Se forma la lista;		var menuBoton = ' <ul id="'+idMenu+'"  role="menu" aria-labelledby="dLabel" style="display:none">'			// Bucle para insertar los elementos pasados por el parametro aElementos;			for(var i=0; i<aElementos.length; i++){								if(aElementos[i] == "/"){ // Este elemento "/" significa que quieres un espacio entre 2 elementos;					menuBoton += "<li><a class='tool'><hr></a></li>";				}else{					menuBoton += "<li><a href='#' id='"+aElementos[i].replace(" ","")+"' class='tool'>"+aElementos[i]+"</a></li>";				}						}		menuBoton +='</ul>'; // Fin de formacion de la lista;		$('body').append(menuBoton);				// Se averigua que elemento se ha seleccionado con la funcion "selectorLista()"		$("a").click(function(){			funcionesMenu.selectorLista($comp,this.id);		});					}			//Funciones dentro del objeto menuObj;	funcionesMenu = {};		funcionesMenu.selectorLista = function($comp,idSelector){				// Segun el selector se realiza una funcion u otra;		switch(idSelector){			case "EliminaLinea": eliminaLinea($comp);break;			case "ModificaLinea": modificaLinea($comp);break;			case "VerCaja": verCaja($comp);break;			default: break;		}			}		// Funcion eliminar linea;	function eliminaLinea($comp){				var cobrado = $comp.sources.docComercial.Cobrado;		if(cobrado != true){			pos = $comp.sources.lineasCollection.Posicion - 1;			vPosRestada = $comp.sources.lineasCollection.Posicion;			var linea = $comp.sources.lineasCollection.ID;						if(linea == null){				UI.alert("No hay Líneas")			}else{					UI.confirm('¿Desea borrar <b>'+$comp.sources.lineasCollection.Descripcion+'</b> del ticket?', 'Confirmacion', function(r) {								if(r == true){				ds.Lineas.borrarLinea(linea);				//DS resto las posiciones a todas las lineas a partir de la borrada				ds.Lineas.restarPosiciones($comp.sources.docComercial.ID,vPosRestada);				$comp.sources.docComercial.serverRefresh();					setTimeout(function(){	UI.mostrarAdvertencia('Atención','Se ha eliminado la línea');},500);						}							});//Fin de Confirm			}//Fin de Else		}else{			UI.alert('Ya está Cobrado','Atención');		}					}		// Funcion modificar Linea	function modificaLinea($comp){				var cobrado = $comp.sources.docComercial.Cobrado;		if(cobrado != true){			$("BODY").append($("#"+$comp.id+"_dialog2"));			$$($comp.id+"_dialog2").displayDialog();						$("#"+$comp.id+"_dialog2").css("top",20);			$("#"+$comp.id+"_dialog2").css("left",300);			$("#"+$comp.id+"_textField12").focus();		}else{			UI.alert('Ya está Cobrado','Atención');		}					}		// Funcion ver movimientos de caja;	function verCaja($comp){		UI.gifCargando();		appds.openDialogMovimiento($comp);		mantenerFoco();	}}var appMenu = new menuObj(); 	