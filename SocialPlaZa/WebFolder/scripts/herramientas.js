//-- FUNCION DE LA BARRA DE HERRAMIENTAS--\\//-- Modo Seleccion Inversa --\\waf.widget.Grid.prototype.invertSelection = function(){	var sel = this.getSelection();	if(sel.isModeMultiple()){		sel.setToInverted(this.source.length);		this.$domNode.find('.container').trigger('scroll');	}}//-- Modo Seleccion total --\\waf.widget.Grid.prototype.selectAll = function(){	var sel = this.getSelection();	if(sel.isModeMultiple()){		sel.selectRange(0, this.source.length - 1, true);		this.$domNode.find('.container').trigger('scroll');	}}//-- Modo Seleccion nula --\\waf.widget.Grid.prototype.selectNone = function(){	var sel = this.getSelection();	if(sel.isModeMultiple()){		sel.setSelectedRows([]);		this.$domNode.find('.container').trigger('scroll');	}}//-- Modo Seleccion aislada --\\waf.Selection.prototype.setToInverted = function(length){	if(this.isModeMultiple()){		this.buildFromObject({			butRows: this.getSelectedRows(),			mode: 'multiple',			ranges: [{start: 0, end: length - 1}]		});	}}//-- Modo Mostrar Todos los registros --\\function mostrarTodo(recurso){			recurso.all();		}//-- Modo Omitir registros seleccionados --\\function omitirSeleccion(recurso, aOmitidos){			var tamanioRecurso = recurso.length;	var aRestoOmitidos =[];		//recorrido del recurso	for(var i=0; i < tamanioRecurso; i++){		aRestoOmitidos[aRestoOmitidos.length] = i;				//recorrido del los seleccionados omitidos		for(var x = 0; x < aOmitidos.length; x++){						if(aOmitidos[x] == i){								//eliminacion de los selecionados				var pos = aRestoOmitidos.indexOf( i );				pos > -1 && aRestoOmitidos.splice( pos, 1 );			}					}	}		console.log(aRestoOmitidos);}	