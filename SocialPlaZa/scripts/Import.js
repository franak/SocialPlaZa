// A simple log for the output		  // Main function function doImportEmpsAndComps (request,response) { var log = "Paises antes de Importar: " + ds.PaisesISO.length;var  current = currentUser().name;if (current == "default guest"){ err = { error : 1, errorMessage: "No hay usuario" };log = err.errorMessage;		contentType = "text/html; charset=UTF-8";		response.statusCode = 301;		response.headers["Location"] = "/login.html?origin="+request.url; // Redirect to the login.        return log;	}	//debugger;     /*   The doc. to import is in the solution folder, in a subfolder         named "Import". We load the full document in one shot  (loadText)          and split it in an array (one line = one element).     */     var lines = loadText( ds.getModelFolder().path + "Import/PaisesISO.txt" ).split("\n");       /*   Declare the variable that will hold the columns of each line.           We know the columns will be:            columns[0]   Name of the company            columns[1]   Last name of the employee            columns[2]   First name            columns[3]   Salary     */    var columns = [];       // Now, loop for each entry in the array  lines.forEach( function(oneLine) {        // Get the columns for current line  columns = oneLine.split("\t");           // Get the company. Create it if needed.      var theComp = ds.PaisesISO.find("Number = :1", columns[0]);      if(theComp == null) { // Not found => create it           theComp = new ds.PaisesISO({            Number : columns[0],			Alpha : columns[1],			Name : columns[2]			//OfficialName : columns[3]          });         // Save it           theComp.save();           }          // Get the employee. Create it if needed.       /* var theEmp = ds.PaisesISO.find("lastName = :1 and firstName = :2", columns[1], columns[2]);      if(theEmp == null) {         theEmp = new ds.PaisesISO( {            lastName    : columns[1],            firstName    : columns[2],            salary   : columns[3],            company   : theComp // This is how you bind two entities with Wakanda!         });       } else {         theEmp.salary = columns[3],         theEmp.company = theComp;      }        theEmp.save();*/     });log += " / Paises Después de importar: " + ds.PaisesISO.length;return log; } // Call the function //doImportEmpsAndComps ();   // Log result